% Copyright 2012 Jeffrey Kegler
% This document is licensed under
% a Creative Commons Attribution-NoDerivs 3.0 United States License.
\documentclass[12pt]{amsart}
\usepackage{algorithm}
\usepackage{url}

% This is now a "paper", but may be a chapter
% or something else someday
% This command will make any such change easier.
\newcommand{\doc}{paper}

\newcommand{\todo}[1]{\par{\large\bf Todo: #1}\par}
\newcommand{\mymathop}[1]{\mathop{\texttt{#1}}}

% For a type name, when it occurs in text
\newcommand{\type}[1]{\ensuremath{#1}}

\newcommand{\size}[1]{\ensuremath{\left | {#1} \right |}}
\newcommand{\dfn}[1]{{\bf #1}}
\newcommand{\sep}{\,\mid\,}
\newcommand{\mydot}{\raisebox{.05em}{$\,\bullet\,$}}
\newcommand{\cat}{\,.\,}

% I use hyphens in variable names,
% so I need to ensure that subtraction is
% clearly distinguished by the typography
\newcommand{\subtract}{\,-\,}

\newcommand{\de}
    {\mathrel{\mbox{$\:\stackrel{\!{R}}{\Rightarrow\!}\:$}}}
\newcommand{\destar}
    {\mathrel{\mbox{$\:\stackrel{\!{R\ast}}{\Rightarrow\!}\:$}}}
\newcommand{\deplus}
    {\mathrel{\mbox{$\:\stackrel{\!{R+}}{\Rightarrow\!}\:$}}}

\newcommand{\set}[1]{{\left\lbrace #1 \right\rbrace} }
\newcommand{\bigset}[1]{{\bigl\lbrace #1 \bigr\rbrace} }
\newcommand{\Bigset}[1]{{\Bigl\lbrace #1 \Bigr\rbrace} }

\hyphenation{oper-and oper-ands}
\hyphenation{look-ahead}

\begin{document}


\date{\today}

\title{Proof of Leo's 1991 Conjecture}

\author{Jeffrey Kegler}
\thanks{%
Copyright \copyright\ 2012 Jeffrey Kegler.
}
\thanks{%
This document is licensed under
a Creative Commons Attribution-NoDerivs 3.0 United States License.
}

\begin{abstract}
This paper is a bleeding-edge draft.
AT PRESENT IT CONTAINS SOME SERIOUS ERRORS.
\end{abstract}

\maketitle

\section{Introduction}

This is a note presenting a proof of Joop Leo's
1991 conjecture.
The conjecture stated that his 1991 algorithm
"runs in linear time for every
LR($\pi$) grammar,
with $\pi$ some finite, but not
necessarily regular, partition of $\Sigma^*$."
\cite{Leo1991}

\section{Definitions}

\section{LR($\pi$)}

We take our definition of LR($\pi$)
from 
Sylvain Schmitz,
"Conservative Ambiguity Detection 
in Context-Free Grammars"
and 
Friedrich Otto,
"Left-to-right regular languages 
and two-way restarting automata".
These definitions differ in notation from that
of Leo 1991.

Let $G = (N, T , P, S )$ be
a context-free grammar.
Let
$A_1, A_2 \in N$, $\delta_1, \delta_2, \gamma_1, \gamma_2 \in (N \cup T)^*$,
and $y_1, y_2, y_3 \in T*$,
Consider the following four conditions:
\begin{gather}
\label{e:lr_pi_condition1}
S \destar \delta_1 A_1 y_1 \de \delta_1 \gamma_1 y_1 \\
\label{e:lr_pi_condition2}
S \destar \delta_2 A_2 y_3 \de \delta_2 \gamma_2 y_3 \\
\label{e:lr_pi_condition3}
\delta_2 \gamma_2 y_3 = \delta_1 \gamma_1 y_2 \\
\label{e:lr_pi_condition4}
y_1 \equiv y_2 \mod(\pi)
\end{gather}
$G$ is LR($\pi$) if
conditions \ref{e:lr_pi_condition1},
\ref{e:lr_pi_condition2},
\ref{e:lr_pi_condition3},
and \ref{e:lr_pi_condition4} imply
that
$A_1 = A_2$, $\delta_1 = \delta_2$ and $y_2 = y_3$.

\subsection{Rules}

A rule is
right recursive if
$A \de \alpha \beta \destar \zeta A$
for some $\zeta \in (N \cup T)*$.

A dotted rule
$A \rightarrow \alpha \mydot \beta$.
is quasi-complete
if $\beta \destar \epsilon$.
A dotted rule is right-recursive if it is
quasi-complete and the rule
$A \rightarrow \alpha \beta$
is right recursive.

\subsection{Earley-partitioned grammars}

Let $G = (N, T , P, S )$ be
a context-free grammar.
Let $A \rightarrow \gamma$ be a rule
which is Earley-efficient.
Let
$A \in N$, $\delta_1, \delta_2, \gamma \in (N \cup T)^*$,
and $y_1, y_2, y_3 \in T*$,
Consider the following three conditions:
\begin{gather}
\label{e:ep_condition1}
S \destar \delta_1 A y_1 \de \delta_1 \gamma y_1 \\
\label{e:ep_condition2}
S \destar \delta_2 A y_2 \de \delta_2 \gamma y_2 \\
\label{e:ep_condition3}
\delta_2 \gamma y_3 = \delta_1 \gamma y_2 \\
\label{e:ep_condition4}
y_1 \equiv y_2 \mod(\pi)
\end{gather}
$G$ is Earley-partitioned if
conditions \ref{e:ep_condition1},
\ref{e:ep_condition2},
\ref{e:ep_condition3}
and \ref{e:ep_condition4}
imply
that $\delta_1 = \delta_2$.

\section{An LR($\pi$) grammar is Earley-partitioned}

\begin{proof}
Consider $G$, a LR($\pi$) grammar.
In the definition
of LR($\pi$) above,
we map
$A_1$ and $A_2$ to $A_{Ep}$;
$\gamma_1$ and $\gamma_2$ to $\gamma_{Ep}$,
and all other symbols to themselves.
This yields the conditions
\begin{gather}
\label{e:ep_proof_condition1}
S \destar \delta_1 A_{Ep} y_1 \de \delta_1 \gamma_{Ep} y_1 \\
\label{e:ep_proof_condition2}
S \destar \delta_2 A_{Ep} y_2 \de \delta_2 \gamma_{Ep} y_2 \\
\label{e:ep_proof_condition3}
\delta_2 \gamma_{Ep} y_3 = \delta_1 \gamma_{Ep} y_2 \\
\label{e:ep_proof_condition4}
y_1 \equiv y_2 \mod(\pi),
\end{gather}
which are
\ref{e:ep_condition1},
\ref{e:ep_condition2}
\ref{e:ep_condition3}
and \ref{e:ep_condition4} as
given in the definition of an
Earley-partitioned grammar.
To show that $G$ is an Earley-partitioned grammar,
we need to show that 
$\delta_1 = \delta_2$
follows from
\ref{e:ep_proof_condition1},
\ref{e:ep_proof_condition2}
\ref{e:ep_proof_condition3}
and \ref{e:ep_proof_condition4}.
By assumption, $G$ is an LR($\pi$) grammar,
and satisifies conditions
\ref{e:lr_pi_condition1},
\ref{e:lr_pi_condition2},
\ref{e:lr_pi_condition3},
and \ref{e:lr_pi_condition4}.
From
the LR($\pi$) definition,
we are entitled to conclude that
$\delta_1 = \delta_2$.
\end{proof}

\section{Proof}

Let $G$ be an Earley partitioned grammar.
Let $m$ be the index of its partition $\pi$.
Let $w = a_1 ... a_n, a_i \in \Sigma, 0 < i < n$
be the input.
Let $w_{i,j}$ be $a_i ... a_j$
and $w_j$ be $w_{0,j}$.

Consider a specific dotted rule,
$A \rightarrow \alpha \mydot \beta$.
We allow
this rule to be quasi-complete or right-recursive,
but not both.
We assume, for the purpose of a reductio,
that the Earley set $j$ contains,
for that dotted rule,
$m+1$ items of the form
$[A \rightarrow \alpha \mydot \beta, i]$.
Since they share a dotted rule,
but are distinct Earley items, they must have
distinct values of $i$.
Call two of these $i_1$ and $i_2$.

For convenience in showing factoring,
we extend the usual notation with
"location markers" of the form $[i]$,
where $i$ is the position in the input
immediately after $w_i$.
For our choice of a specific rule,
and marking locations based on the Earley items,
our conditions become
\begin{gather}
\label{e:condition1a}
S \destar \delta_1 [i_1] A y_1 \de \delta_1 [i_1] \alpha [j] \beta y_1 \\
\label{e:condition2a}
S \destar \delta_2 [i_2] A y_3 \de \delta_2 [i_2] \alpha [j] \beta y_3
\end{gather}

We know these hold because,
by the correctness of Earley's algorithm,
the presence of the Earley items
$[A \rightarrow \alpha \mydot \beta, i_1]$
and 
$[A \rightarrow \alpha \mydot \beta, i_2]$
in Earley set $j$,
guarantee there are appropriate values
for $\delta_1, \delta_2, y_1, y_3$

From the assumption that $G$ is Earley-partitioned,
we know that $\delta_1 = \delta_2$,
and can rewrite
\ref{e:condition1a} and
\ref{e:condition2a} as
\begin{gather}
\label{e:condition1b}
S \destar \delta [i_1] A y_1 \de \delta [i_1] \alpha [j] \beta y_1 \\
\label{e:condition2b}
S \destar \delta [i_2] A y_3 \de \delta [i_2] \alpha [j] \beta y_3
\end{gather}

We identify four cases:
\begin{center}
\begin{tabular}{ll}
Case 1: &
$[0] \delta [i_1] \alpha [j] \destar w[0,j]$
and 
$[0] \delta [i_2] \alpha [j] \destar w[0,j]$
are two factorings of  $w[0,j]$. \\
Case 2: & 
$[0] \delta_1 [i_1] \alpha [j] \beta y_1
\deplus
[0] \delta_2 [i_2] \alpha [j] \beta y_3$ \\
Case 3: &
$[0] \delta_2 [i_2] \alpha [j] \beta y_3
\deplus
[0] \delta_1 [i_1] \alpha [j] \beta y_1$ \\
Case 4: &
$[0] \delta_1 [i_1] \alpha [j] =
[0] \delta_2 [i_2] \alpha [j]$ \\
\end{tabular}
\end{center}

Case 1:
If there are two factorings of $w[0,j]$,
$G$ is ambiguous.
This is contrary to assumption.

Case 2:
\begin{equation}
[0] \delta_1 [i_1] \alpha [j] \beta y_1
\deplus
[0] \delta_2 [i_2] \alpha [j] \beta y_3
\end{equation}
By assumption we know that $A \rightarrow \alpha \beta$ is
not a quasi-complete right recursion.
So this case is not possible.

Case 3:
This case is also
impossible, by symmetry with case 2.

Case 4:
\begin{equation}
[0] \delta_1 [i_1] \alpha [j] =
[0] \delta_2 [i_2] \alpha [j]
\end{equation}
In this case, we have $\delta_1 = \delta_2$ and
$i_1 = i_2$.

But if 
$i_1 = i_2$,
the two Earley items
\begin{gather}
[A \rightarrow \alpha \mydot \beta, i_1] \\
[A \rightarrow \alpha \mydot \beta, i_2]
\end{gather}
are identical, which is contrary to our assuption,
and which completes the reductio.

From the reductio we conclude that,
in any Earley set $j$, there can be
at most $m = \size{\pi}$ Earley items of the
form
$[A \rightarrow \alpha \mydot \beta, i]$.
QED.

\bibliographystyle{plain}

\begin{thebibliography}{10}

\bibitem{Leo1991}
J.~M. I.~M. Leo.
\newblock A general context-free parsing algorithm running in linear time on
  every {LR($k$)} grammar without using lookahead.
\newblock {\em Theoretical Computer Science}, 82:165--176, 1991.

\end{thebibliography}

\clearpage
\tableofcontents

\end{document}
