% Copyright 2012 Jeffrey Kegler
% This document is licensed under
% a Creative Commons Attribution-NoDerivs 3.0 United States License.
\documentclass[12pt]{amsart}
\usepackage{algorithm}
\usepackage{algpseudocode}
\usepackage{url}

% This is now a "paper", but may be a chapter
% or something else someday
% This command will make any such change easier.
\newcommand{\doc}{paper}

\newcommand{\todo}[1]{\par{\large\bf Todo: #1}\par}
\newcommand{\mymathop}[1]{\mathop{\texttt{#1}}}

% For a type name, when it occurs in text
\newcommand{\type}[1]{\ensuremath{#1}}

\newcommand{\size}[1]{\ensuremath{\left | {#1} \right |}}
\newcommand{\dfn}[1]{{\bf #1}}
\newcommand{\sep}{\,\mid\,}
\newcommand{\mydot}{\raisebox{.05em}{$\,\bullet\,$}}
\newcommand{\cat}{\,.\,}

% I use hyphens in variable names,
% so I need to ensure that subtraction is
% clearly distinguished by the typography
\newcommand{\subtract}{\,-\,}

\newcommand{\de}
    {\mathrel{\mbox{$\:\stackrel{\!{R}}{\Rightarrow\!}\:$}}}
\newcommand{\destar}
    {\mathrel{\mbox{$\:\stackrel{\!{R\ast}}{\Rightarrow\!}\:$}}}

\newcommand{\set}[1]{{\left\lbrace #1 \right\rbrace} }
\newcommand{\bigset}[1]{{\bigl\lbrace #1 \bigr\rbrace} }
\newcommand{\Bigset}[1]{{\Bigl\lbrace #1 \Bigr\rbrace} }

\hyphenation{oper-and oper-ands}
\hyphenation{look-ahead}

\begin{document}

\date{\today}

\title{Proof of Leo's 1991 Conjecture}

\author{Jeffrey Kegler}
\thanks{%
Copyright \copyright\ 2012 Jeffrey Kegler.
}
\thanks{%
This document is licensed under
a Creative Commons Attribution-NoDerivs 3.0 United States License.
}

\maketitle

\section{Introduction}

This is a note presenting a proof of Joop Leo's
1991 conjecture.
The conjecture stated that his 1991 algorithm
"runs in linear time for every
LR($\pi$) grammar,
with $\pi$ some finite, but not
necessarily regular, partition of $\Sigma^*$."
\cite{Leo1991}

\section{Defining LR($\pi$)}

We take our definition of LR($\pi$)
from 
Sylvain Schmitz,
"Conservative Ambiguity Detection 
in Context-Free Grammars"
and 
Friedrich Otto,
"Left-to-right regular languages 
and two-way restarting automata".
These definitions differ in notation from that
of Leo 1991.

Let $G = (N, T , P, S )$ be
a context-free grammar.
$G$ is called LR($\pi$).
Let
$A_1, A_2 \in N$, $\delta_1, \delta_2, \gamma \in (N \cup T)^*$,
and $y_1, y_2, y_3 \in T*$,
Consider the following three conditions:
\begin{gather}
\label{e:condition1}
S \destar \delta_1 A_1 y_1 \de \delta_1 \gamma_1 y_1 \\
\label{e:condition2}
S \destar \delta_2 A_2 y_3 \de \delta_2 \gamma_2 y_3 = \delta_1 \gamma_1 y_2 \\
\label{e:condition3}
y_1 \equiv y_2 \mod(\pi)
\end{gather}

If conditions \ref{e:condition1},
\ref{e:condition2},
and \ref{e:condition3} hold,
then
$A_1 = A_2$, $\delta_1 = \delta_2$ and $y_2 = y_3$.

\section{Proof}

Let $m$ be the index of the partition $\pi$.
Let $w = a_1 ... a_n, a_i \in \Sigma, 0 < i < n$
be the input.
Let $w_{i,j}$ be $a_i ... a_j$
and $w_j$ be $w_{0,j}$.

Consider a specific dotted rule,
$A \rightarrow \alpha \mydot \beta$.
We assume, for the purpose of a reductio,
that the Earley set $j$ contains,
for that dotted rule,
$m+1$ items of the form
$[A \rightarrow \alpha \mydot \beta, i]$.
Since they share a dotted rule,
but are distinct Earley items, they must have
distinct values of $i$.
Call two of these $i_1$ and $i_2$.

In the definition, we set
$\delta_1$ to
the first $i_1$ symbols of the input;
$\delta_2$ to
the first $i_2$ symbols of the input.
We know that $\delta_1 \neq \delta_2$.
$A_1$ and $A_2$ both to $A$;
and both $\gamma_1$ and $\gamma_2$ to $\alpha \beta$.

It is a property of the Earley algorithm that all
Earley items are "correct" in the sense
that, if they are in Earley set $j$,
there is some input stream from $j$ onward
which includes that item in a derivation
consistent with the input as far as $j$.
The presence of the Earley items in the Earley sets,
therefore, guarantees that there is some
$y_1$ and some $y_2 = y_3$
such that the two rightmost derivations
of the definition of LR($\pi$) hold.

We now show that, given the assumption for
the reduction,
$y_1 \equiv y_2 \mod(\pi)$,
holds as well.
That assumption was that
the number of Earley items exceeds
the index of the partition.
Therefore
there must at least one pair of
Earley items that share the
same equivalence class.
If the grammar is LR($\pi$),
we are forced to
conclude for this pair of Earley items,
that $\delta_1 = \delta_2$.

But since $\delta_1$ and $\delta_2$ are,
respectively,
the first $i_1$
and $i_2$ symbols of the input.
And since the two Earley items
are distinct,
but share the same
rule and the same dot position,
they must differ in their values of $i$.
Therefore $i_1 \neq i_2$,
$\size{\delta_1} \neq \size{\delta_2}$,
and, contrary to what we concluded at the
end of the previous paragraph,
$\delta_1 \neq \delta_2$.

By concluding that $\delta_1 \neq \delta_2$
and $\delta_1 = \delta_2$
completes our reductio.
Therefore there can be at most $m$
Earley items of the form
$[A \rightarrow \alpha \mydot \beta, i]$.
QED.

\bibliographystyle{plain}

\begin{thebibliography}{10}

\bibitem{Leo1991}
J.~M. I.~M. Leo.
\newblock A general context-free parsing algorithm running in linear time on
  every {LR($k$)} grammar without using lookahead.
\newblock {\em Theoretical Computer Science}, 82:165--176, 1991.

\end{thebibliography}

\clearpage
\tableofcontents

\end{document}
